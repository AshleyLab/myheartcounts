getwd()
healthkit_steps=data.frame(read.table(
"health_kit_combined.steps.txt.regression",
header=TRUE,sep='\t',stringsAsFactors = FALSE))
healthkit_distance=data.frame(read.table(
"health_kit_combined.distance.txt.regression",
header=TRUE,sep='\t',stringsAsFactors = FALSE))
#Remove any step counts greater than 20k and distance walked > 25k meters
healthkit_steps=healthkit_steps[healthkit_steps$Value<20000,]
healthkit_distance=healthkit_distance[healthkit_distance$Value<25000,]
healthkit_steps=healthkit_steps[healthkit_steps$ABTest %in% c("baseline",
"cluster",
"read_aha",
"stand",
"walk"),]
healthkit_distance=healthkit_distance[healthkit_distance$ABTest %in% c("baseline",
"cluster",
"read_aha",
"stand",
"walk"),]
healthkit_steps$ABTest=factor(healthkit_steps$ABTest,
levels=c("baseline",
"cluster",
"read_aha",
"stand",
"walk"))
healthkit_distance$ABTest=factor(healthkit_distance$ABTest,
levels=c("baseline",
"cluster",
"read_aha",
"stand",
"walk"))
healthkit_steps=healthkit_steps[healthkit_steps$WatchVsPhone=="phone",]
healthkit_distance=healthkit_distance[healthkit_distance$WatchVsPhone=="phone",]
healthkit_steps$Subject=factor(healthkit_steps$Subject)
healthkit_distance$Subject=factor(healthkit_distance$Subject)
#week index --reduce parameters. -- done, see below
#add quadratic term -- done, see below
#remove interaction terms --done
# intent to treat -- yes, use the ABTest value --done
# use last received intervention  & last assigned intervention ; but causes collinearity issues
# just the 4
#Add indicator variable if person is watch + phone vs just phone
#use the default structure assuming consistent behavior
healthkit_distance$dayIndex=as.numeric(healthkit_distance$dayIndex)
healthkit_steps$WeekIndex=ceiling(healthkit_steps$dayIndex/7)
healthkit_distance$WeekIndex=ceiling(healthkit_distance$dayIndex/7)
model = lme(Value ~
ABTest  + WeekIndex + WeekIndex**2,
random = ~1|Subject,
data=healthkit_steps,
control=lmeControl(opt="optim"))
Anova(model)
marginal = lsmeans(model, ~ ABTest + WeekIndex )
plot(cld(marginal,
alpha   = 0.05,
Letters = letters,     ### Use lower-case letters for .group
adjust  = "tukey"))     ###  Tukey-adjusted comparisons
#HISTOGRAM OF RESIDUALS
x = residuals(model)
library(rcompanion)
plotNormalHistogram(x)
plot(fitted(model),
residuals(model))
source('~/sherlock2/code/anna_code/rct/within_subject_effects_with_dayIndex.R')
model = lme(Value ~
ABTest  + WeekIndex + WeekIndex**2,
random = ~1|Subject,
data=healthkit_steps,
control=lmeControl(opt="optim"))
model.weights()
model$coefficients
model$modelStruct
model
model$dims
model = lme(Value ~
ABTest  + WeekIndex + WeekIndex**2,
random = ~1|Subject,
data=healthkit_steps,
control=lmeControl(opt="optim"))
Anova(model)
marginal = lsmeans(model, ~ ABTest + WeekIndex )
plot(cld(marginal,
alpha   = 0.05,
Letters = letters,     ### Use lower-case letters for .group
adjust  = "tukey"))     ###  Tukey-adjusted comparisons
#HISTOGRAM OF RESIDUALS
x = residuals(model)
library(rcompanion)
plotNormalHistogram(x)
plot(fitted(model),
residuals(model))
#
summary(model)
lsmeans()
summary(marginal)
fitted(model)
